{
	"info": {
		"_postman_id": "72360a38-ac65-4e58-88b5-4c18a22f0e54",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26016208"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверить, что в body приходит правильный string.",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");",
							"});",
							"",
							"",
							"// pm.test(\"Status code is 200\", function () {",
							"//     pm.response.to.have.status(200);",
							"// });",
							"",
							"// var resp_json = pm.response.json();",
							"// var resp_name = resp_json.person.u_name[0];",
							"// var resp_age = resp_json.person.u_age;",
							"// console.log(resp_name, resp_age);",
							"",
							"// let resp_start_qa_selery =  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Спарсить response body в json.",
							"var resp = pm.response.json();",
							"var resp_age = resp.age;",
							"var resp_name = resp.name;",
							"var resp_salary = resp.salary;",
							"var resp_salary_1_5 = resp.u_salary_1_5_year;",
							"",
							"// 4. Проверить, что name в ответе равно name c request (name вбить руками.)",
							"pm.test(\"Request and responce name check manual\", function () {",
							"    pm.expect(resp_name).to.eql(\"Sasha\");",
							"});",
							"",
							"// 5. Проверить, что age в ответе равно age c request (age вбить руками.)",
							"pm.test(\"Request and responce age check manual\", function () {",
							"    pm.expect(+resp_age).to.eql(25);",
							"});",
							"",
							"// 6. Проверить, что salary в ответе равно salary c request (salary вбить руками.)",
							"pm.test(\"Request and responce salary check manual\", function () {",
							"    pm.expect(+resp_salary).to.eql(1500);",
							"});",
							"",
							"// 7. Спарсить request.",
							"var req = request.data;",
							"var req_age = req.age;",
							"var req_name = req.name;",
							"var req_salary = req.salary;",
							"var req_salary_1_5 = req.u_salary_1_5_year;",
							"",
							"// 8. Проверить, что name в ответе равно name c request (name забрать из request.)",
							"pm.test(\"Request and responce name check\", function () {",
							"    pm.expect(resp_name).to.eql(req_name);",
							"});",
							"",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"pm.test(\"Request and responce age check\", function () {",
							"    pm.expect(+resp_age).to.eql(+req_age);",
							"});",
							"",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"pm.test(\"Request and responce salary check\", function () {",
							"    pm.expect(+resp_salary).to.eql(+req_salary);",
							"});",
							"",
							"// 11. Вывести в консоль параметр family из response.",
							"console.log(\"Family \", resp.family);",
							"",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)",
							"pm.test(\"Check responce salary for 1.5 year and request salary * 4\", function () {",
							"    pm.expect(+resp_salary_1_5).to.eql(+req_salary_1_5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sasha",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Спарсить response body в json.",
							"var resp = pm.response.json();",
							"var resp_name = resp.name;",
							"var resp_age = resp.age;",
							"var resp_salary = resp.salary",
							"",
							"// 4. Спарсить request.",
							"var req_url = pm.request.url.query.toObject();",
							"var req_name = req_url.name;",
							"var req_age = req_url.age;",
							"var req_salary = req_url.salary;",
							"var dogname = resp.family.pets.dog;",
							"",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"pm.test(\"Responce name = request name\", function () {",
							"    pm.expect(req_name).to.eql(resp_name);",
							"});",
							"",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)",
							"pm.test(\"Responce age = request age\", function () {",
							"    pm.expect(+req_age).to.eql(+resp_age);",
							"});",
							"",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)",
							"pm.test(\"Responce salary = request salary\", function () {",
							"    pm.expect(+req_salary).to.eql(+resp_salary);",
							"});",
							"",
							"// 8. Вывести в консоль параметр family из response.",
							"console.log(\"Family\", resp.family);",
							"",
							"// 9. Проверить, что у параметра dog есть параметры name.",
							"pm.test(\"Have property name\", function() {",
							"  pm.expect(dogname).to.have.property(\"name\");",
							"});",
							"",
							"// 10. Проверить, что у параметра dog есть параметры age.",
							"pm.test(\"Have property age\", function() {",
							"  pm.expect(dogname).to.have.property(\"age\");",
							"});",
							"",
							"// 11. Проверить, что параметр name имеет значение Luky.",
							"pm.test(\"Dog name is Luky\", function() {",
							"  pm.expect(dogname).to.have.property(\"name\", \"Luky\");",
							"});",
							"",
							"// 12. Проверить, что параметр age имеет значение 4.",
							"pm.test(\"Dog age is 4\", function() {",
							"  pm.expect(dogname).to.have.property(\"age\", 4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=Sasha&age=25&salary=1500",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Sasha"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Спарсить response body в json.",
							"var resp = pm.response.json();",
							"var resp_name = resp.name;",
							"var resp_age = resp.age;",
							"var resp_salary = resp.salary",
							"",
							"// 4. Спарсить request.",
							"var req_url = pm.request.url.query.toObject();",
							"var req_name = req_url.name;",
							"var req_age = req_url.age;",
							"var req_salary = req_url.salary",
							"",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)",
							"pm.test(\"Responce name = request name\", function () {",
							"    pm.expect(resp_name).to.eql(req_name);",
							"});",
							"",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)",
							"pm.test(\"Responce age = request age\", function () {",
							"    pm.expect(+resp_age).to.eql(+req_age);",
							"});",
							"",
							"// 7. Вывести в консоль параметр salary из request.",
							"console.log(\"Request salary\", req_salary);",
							"",
							"// 8. Вывести в консоль параметр salary из responce.",
							"console.log(\"Responce salary\", resp_salary);",
							"",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.",
							"console.log(\"Responce salary\", resp_salary[0]);",
							"",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.",
							"console.log(\"Responce salary\", resp_salary[1]);",
							"",
							"// 11. Вывести в консоль 1-й элемент параметра salary параметр salary из response.",
							"console.log(\"Responce salary\", resp_salary[2]);",
							"",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)",
							"pm.test(\"Responce salary = request salary\", function () {",
							"    pm.expect(+resp_salary[0]).to.eql(+req_salary);",
							"});",
							"",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)",
							"pm.test(\"Responce salary = request salary\", function () {",
							"    pm.expect(+resp_salary[1]).to.eql(+req_salary * 2);",
							"});",
							"",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)",
							"pm.test(\"Responce salary = request salary\", function () {",
							"    pm.expect(+resp_salary[2]).to.eql(+req_salary * 3);",
							"});",
							"",
							"// 15. Создать в окружении переменную name",
							"pm.environment.get(\"name\");",
							"",
							"// 16. Создать в окружении переменную age",
							"pm.environment.get(\"age\");",
							"",
							"// 17. Создать в окружении переменную salary",
							"pm.environment.get(\"salary\");",
							"",
							"// 18. Передать в окружение переменную name",
							"pm.environment.set(\"name\", req_name);",
							"",
							"// 19. Передать в окружение переменную age",
							"pm.environment.set(\"age\", req_age);",
							"",
							"// 20. Передать в окружение переменную salary",
							"pm.environment.set(\"salary\", req_salary);",
							"",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.",
							"for (i in resp_salary) {",
							"    console.log(\"Key \"+ i, \"value \" + resp_salary[i]);",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_4?name=Sasha&age=25&salary=1500",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Sasha"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sasha",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}